import pytest
from subprocess import check_call


@pytest.fixture()
def project(request, tmpdir):
    tmpdir.chdir()

    request.fspath.dirpath('fixture_empty_bower.json').copy(tmpdir.join('bower.json'))
    request.fspath.dirpath('fixture_bowerrc').copy(tmpdir.join('.bowerrc'))
    tmpdir.mkdir('app').mkdir('bower_components').join('.gitignore').ensure(file=True)

    request.fspath.dirpath('fixture_empty_package.json').copy(tmpdir.join('package.json'))
    tmpdir.mkdir('node_modules').join('.gitignore').ensure(file=True)

    request.fspath.dirpath('fixture_gitignore').copy(tmpdir.join('.gitignore'))

    check_call(['git', 'init'])
    check_call(['git', 'add', '.'])
    check_call(['git', 'commit', '-m', '(TEST) Initial.'])

    return tmpdir


@pytest.fixture()
def bower_components_path(project):
    return project.join('app/bower_components')


@pytest.fixture()
def node_modules_path(project):
    return project.join('node_modules')


@pytest.fixture()
def dep_cmd(request, project):
    project.chdir()
    return str(request.fspath.dirpath('../dep'))
